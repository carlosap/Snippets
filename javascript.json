{

	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},

	"try and catch": {
		"prefix": "try",
		"body": [
			"try {",
			"\t$0",
			"}catch(error) {",
			"\tconsole.log(error);",
			"}"
		],
		"description": "Try and Catch"
	},
	//Redux- Actions
	"For Loop": {
		"prefix": "for1",
		"body": [
			"for (var ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {",
			"\tvar ${3:element} = ${2:array}[${1:index}];",
			"\t$0",
			"}"
		],
		"description": "For Loop"
	},
	"componentDidMount": {
		"prefix": "did",
		"body": [
			"componentDidMount() {",
			"\t$0",
			"}"
		],
		"description": "is invoked immediately after a component is mounted."
	},
	"componentWillUnmount": {
		"prefix": "un",
		"body": [
			"componentWillUnmount() {",
			"\t$0",
			"}"
		],
		"description": " is invoked immediately before a component is unmounted and destroyed."
	},
	"componentWillMount": {
		"prefix": "will",
		"body": [
			"componentWillMount() {",
			"\t$0",
			"}"
		],
		"description": "is invoked immediately before mounting occurs."
	}
}