{
	"Error Check": {
		"prefix": "error",
		"body": [
			"if err != nil {",
			"\treturn err",
			"}",
			"",
			"$0"
		],
		"description": "Checks for Error is nil"
	},
	"range": {
		"prefix": "range",
		"body": [
			"for ${1:index},${2:item} := range ${3:items} {",
			"\t$0",
			"}"
		],
		"description": "range list"
	},
	"rangemap": {
		"prefix": "rangemap",
		"body": [
			"for ${1:key},${2:value} := range ${3:mapName} {",
			"\t$0",
			"}"
		],
		"description": "range key and value for map"
	},
	":": {
		"prefix": ":",
		"body": [
			"${1:varName} := ${2:varValue}",
			"$0"
		],
		"description": "local varibale using :"
	},
	"newlist": {
		"prefix": "newlist",
		"body": [
			"var ${1:varName} = make([]${2:listType}, 0)",
			"$0"
		],
		"description": "Creates a Go Slice Variable"
	},
	"err": {
		"prefix": "err",
		"body": [
			"if err != nil {",
			"\t$0",
			"}"			
		],
		"description": "checks if error is not nil (null)"
	},
	"split": {
		"prefix": "split",
		"body": [
			"${1:varname} := strings.Split(${2:stringToSplit}, ${3:deliValue})",
			"\t$0"	
		],
		"description": "splits a deliminated item by ','"
	}
}